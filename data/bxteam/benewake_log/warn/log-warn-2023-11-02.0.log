2023-11-02 18:12:15.939 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:12:16.008 [restartedMain] WARN  [,] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deliveryController': Unsatisfied dependency expressed through field 'deliveryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deliveryServiceImpl': Unsatisfied dependency expressed through field 'inquiryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inquiryServiceImpl': Unsatisfied dependency expressed through field 'salesOrderVoMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salesOrderVoMapper' defined in file [E:\北醒文件\测试版本\saleorder-system-main\target\classes\com\benewake\saleordersystem\mapper\Vo\SalesOrderVoMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Detected conflicting annotations '@org.apache.ibatis.annotations.Select(databaseId=, value=[<script>SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table <if test='qw1.customSqlSegment != null'>${qw1.customSqlSegment}</if> ) AS a LEFT JOIN (SELECT inquiry_code, MIN(created_time) AS create_time, MAX(created_time) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code) AS b ON a.inquiry_code = b.inquiry_code LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table <if test='qw2.customSqlSegment != null'>${qw2.customSqlSegment}</if> ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table <if test='qw3.customSqlSegment != null'>${qw3.customSqlSegment}</if> ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table <if test='qw4.customSqlSegment != null'>${qw4.customSqlSegment}</if> ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table <if test='qw5.customSqlSegment != null'>${qw5.customSqlSegment}</if> ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table <if test='qw6.customSqlSegment != null'>${qw6.customSqlSegment}</if> ) AS f ON a.customer_id = f.customer_id <if test='ew.customSqlSegment != null'>${ew.customSqlSegment}</if> ORDER BY inquiry_code DESC</script>])' and '@org.apache.ibatis.annotations.Select(databaseId=, value=[<script></script>])' on 'com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter'.
2023-11-02 18:13:01.419 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:13:01.459 [restartedMain] WARN  [,] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deliveryController': Unsatisfied dependency expressed through field 'deliveryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deliveryServiceImpl': Unsatisfied dependency expressed through field 'inquiryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inquiryServiceImpl': Unsatisfied dependency expressed through field 'salesOrderVoMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salesOrderVoMapper' defined in file [E:\北醒文件\测试版本\saleorder-system-main\target\classes\com\benewake\saleordersystem\mapper\Vo\SalesOrderVoMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Detected conflicting annotations '@org.apache.ibatis.annotations.Select(databaseId=, value=[<script>SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table <if test='qw1.customSqlSegment != null'>${qw1.customSqlSegment}</if> ) AS a LEFT JOIN (SELECT inquiry_code, MIN(created_time) AS create_time, MAX(created_time) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code) AS b ON a.inquiry_code = b.inquiry_code LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table <if test='qw2.customSqlSegment != null'>${qw2.customSqlSegment}</if> ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table <if test='qw3.customSqlSegment != null'>${qw3.customSqlSegment}</if> ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table <if test='qw4.customSqlSegment != null'>${qw4.customSqlSegment}</if> ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table <if test='qw5.customSqlSegment != null'>${qw5.customSqlSegment}</if> ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table <if test='qw6.customSqlSegment != null'>${qw6.customSqlSegment}</if> ) AS f ON a.customer_id = f.customer_id <if test='ew.customSqlSegment != null'>${ew.customSqlSegment}</if> ORDER BY inquiry_code DESC</script>])' and '@org.apache.ibatis.annotations.Select(databaseId=, value=[<script></script>])' on 'com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter'.
2023-11-02 18:13:26.202 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:13:26.221 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - interface java.util.Map ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:13:28.257 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.Past.PastPredictionCompany ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:15:09.078 [http-nio-8080-exec-2] WARN  [,] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/benewake/saleordersystem/mapper/Vo/SalesOrderVoMapper.java (best guess)
### The error may involve com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter-Inline
### The error occurred while setting parameters
### SQL: SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table  WHERE (bb.inquiry_id IS NOT NULL AND state >= ?)  ) AS a LEFT JOIN (SELECT inquiry_code, MIN(created_time) AS create_time, MAX(created_time) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code) AS b ON a.inquiry_code = b.inquiry_code LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table  WHERE (item_code IS NOT NULL)  ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table  WHERE (item_code IS NOT NULL)  ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table  WHERE (customer_name IS NOT NULL)  ) AS f ON a.customer_id = f.customer_id  WHERE (customer_name IS NOT NULL AND created_user_name IS NOT NULL AND salesman_name IS NOT NULL AND (created_user_name = ? OR salesman_name = ?))  ORDER BY inquiry_code DESC
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1]
2023-11-02 18:15:26.738 [http-nio-8080-exec-9] WARN  [,] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/benewake/saleordersystem/mapper/Vo/SalesOrderVoMapper.java (best guess)
### The error may involve com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter-Inline
### The error occurred while setting parameters
### SQL: SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table  WHERE (bb.inquiry_id IS NOT NULL AND state >= ?)  ) AS a LEFT JOIN (SELECT inquiry_code, MIN(created_time) AS create_time, MAX(created_time) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code) AS b ON a.inquiry_code = b.inquiry_code LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table  WHERE (item_code IS NOT NULL)  ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table  WHERE (item_code IS NOT NULL)  ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table  WHERE (customer_name IS NOT NULL)  ) AS f ON a.customer_id = f.customer_id  WHERE (customer_name IS NOT NULL AND created_user_name IS NOT NULL AND salesman_name IS NOT NULL AND (created_user_name = ? OR salesman_name = ?))  ORDER BY inquiry_code DESC
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1]
2023-11-02 18:17:10.484 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:17:10.502 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - interface java.util.Map ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:17:11.920 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.Past.PastPredictionCompany ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:17:34.522 [http-nio-8080-exec-2] WARN  [,] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/benewake/saleordersystem/mapper/Vo/SalesOrderVoMapper.java (best guess)
### The error may involve com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter-Inline
### The error occurred while setting parameters
### SQL: SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table  WHERE (bb.inquiry_id IS NOT NULL AND state >= ?)  ) AS a LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table  WHERE (item_code IS NOT NULL)  ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table  WHERE (item_code IS NOT NULL)  ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table  WHERE (customer_name IS NOT NULL)  ) AS f ON a.customer_id = f.customer_id  WHERE (customer_name IS NOT NULL AND created_user_name IS NOT NULL AND salesman_name IS NOT NULL AND (created_user_name = ? OR salesman_name = ?))  ORDER BY inquiry_code DESC
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1]
2023-11-02 18:18:38.624 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:18:38.644 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - interface java.util.Map ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:18:40.065 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.Past.PastPredictionCompany ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:18:57.182 [http-nio-8080-exec-1] WARN  [,] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/benewake/saleordersystem/mapper/Vo/SalesOrderVoMapper.java (best guess)
### The error may involve com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter-Inline
### The error occurred while setting parameters
### SQL: SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table  WHERE (bb.inquiry_id IS NOT NULL AND state >= ?)  ) AS a LEFT JOIN (SELECT inquiry_code, MIN(created_time) AS create_time, MAX(created_time) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code) AS b ON a.inquiry_code = b.inquiry_code LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table  WHERE (item_code IS NOT NULL)  ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table  WHERE (item_code IS NOT NULL)  ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table  WHERE (customer_name IS NOT NULL)  ) AS f ON a.customer_id = f.customer_id  WHERE (customer_name IS NOT NULL AND created_user_name IS NOT NULL AND salesman_name IS NOT NULL AND (created_user_name = ? OR salesman_name = ?))  ORDER BY inquiry_code DESC
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1]
2023-11-02 18:19:04.544 [http-nio-8080-exec-3] WARN  [,] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/benewake/saleordersystem/mapper/Vo/SalesOrderVoMapper.java (best guess)
### The error may involve com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter-Inline
### The error occurred while setting parameters
### SQL: SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table  WHERE (bb.inquiry_id IS NOT NULL AND state >= ?)  ) AS a LEFT JOIN (SELECT inquiry_code, MIN(created_time) AS create_time, MAX(created_time) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code) AS b ON a.inquiry_code = b.inquiry_code LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table  WHERE (item_code IS NOT NULL)  ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table  WHERE (item_code IS NOT NULL)  ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table  WHERE (FIM_user_name IS NOT NULL)  ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table  WHERE (customer_name IS NOT NULL)  ) AS f ON a.customer_id = f.customer_id  WHERE (customer_name IS NOT NULL AND created_user_name IS NOT NULL AND salesman_name IS NOT NULL AND (created_user_name = ? OR salesman_name = ?))  ORDER BY inquiry_code DESC
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1]
2023-11-02 18:26:19.134 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:26:19.158 [restartedMain] WARN  [,] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deliveryController': Unsatisfied dependency expressed through field 'deliveryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deliveryServiceImpl': Unsatisfied dependency expressed through field 'inquiryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inquiryServiceImpl': Unsatisfied dependency expressed through field 'salesOrderVoMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salesOrderVoMapper' defined in file [E:\北醒文件\测试版本\saleorder-system-main\target\classes\com\benewake\saleordersystem\mapper\Vo\SalesOrderVoMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Detected conflicting annotations '@org.apache.ibatis.annotations.Select(databaseId=, value=[<script>select distinct (inquiry_id),inquiry_code,inquiry_init_type,state,created_user_name,item_type,allow_inquiry,inquiry_type,item_code,item_name,customer_name,salesman_name,sale_num,expected_time,arranged_time,delay,customer_type,order_delivery_progress,delivery_code,receive_time,delivery_state,customize,remark from (select inquiry_id as inquiry_id,(case when state=-1 then '无效' when state=0 then '保存' else concat('询单',state,'次') end) as state,a.inquiry_code as inquiry_code,sale_num as sale_num,expected_time as expected_time,arranged_time as arranged_time,allow_inquiry as allow_inquiry,created_user as created_user,salesman_id as salesman_id,a.item_id as item_id,a.customer_id as customer_id,remark as remark,(case when order_delivery_progress is null then '未发货' when order_delivery_progress = 80 then '已签收' when order_delivery_progress = 40 then '海外订单'else '已发货客户未签收' end) as order_delivery_progress,delivery_code,receive_time,delivery_state,delay as delay,(case when item_type = 1 then '已有标品' when item_type = 2 then '已有定制' when item_type = 3 then '新增软件定制' when item_type = 4 then '新增原材料定制'  when item_type = 5 then '新增原材料+软件定制' else '错误物料类型' end) as item_type,item_code as item_code,item_name as item_name,(case when inquiry_type = 1 then 'PO(客户付款)' when inquiry_type = 2 then 'PR(客户提出付款意向)' when inquiry_type = 3 then 'YG(供应链预估)' when inquiry_type = 4 then 'YC(销售预测)' when inquiry_type = 5 then 'XD(意向询单)' else 'ER(错误)' end) as inquiry_type,(case when item_type = 1 or item_type = 2 then '否' when item_type = 3 or item_type = 4 or item_type = 5 then '是' else '错误' end) as customize,(case when customer_type is null then '日常' else customer_type end) as customer_type,(case when inquiry_init_type = 5 then '销售询单' when inquiry_init_type = 4 then '销售预测' when inquiry_init_type = 3 then '供应链预估' else '错误的初始类型' end) as inquiry_init_type from (select fim_inquiry_table.inquiry_id,inquiry_code as inquiry_code,state as state,inquiry_init_type as inquiry_init_type,inquiry_type as inquiry_type,sale_num as sale_num,expected_time as expected_time,arranged_time as arranged_time,created_user as created_user,salesman_id as salesman_id,item_id as item_id,customer_id as customer_id,remark as remark,allow_inquiry as allow_inquiry,(case when arranged_time > expected_time then '是' else '否' end )as delay from fim_inquiry_table left join (select SUBSTRING_INDEX(GROUP_CONCAT(inquiry_id ORDER BY created_time desc),',',1) as inquiry_id,SUBSTRING_INDEX(GROUP_CONCAT(inquiry_type ORDER BY created_time asc),',',1) as inquiry_init_type from fim_inquiry_table group by inquiry_code) as bb on bb.inquiry_id = fim_inquiry_table.inquiry_id ${qw1.customSqlSegment}) as a left join (select customer_id,item_id,customer_type from fim_customer_type_table) as d on a.customer_id = d.customer_id and d.item_id = a.item_id left join (SELECT inquiry_code, MIN( created_time ) AS create_time, MAX( created_time ) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code )as z on a.inquiry_code=z.inquiry_codeleft join (select item_id,item_code,item_name,item_type from fim_item_table ${qw2.customSqlSegment}) as e on e.item_id = a.item_id left join(select inquiry_code,delivery_state as order_delivery_progress,delivery_code as delivery_code,receive_time as receive_time,delivery_latest_state as delivery_state from delivery_table) as j on j.inquiry_code = a.inquiry_code ${qw3.customSqlSegment}) as a left join (select FIM_user_id,FIM_user_name as salesman_name from fim_users_table ${qw4.customSqlSegment}) as b on a.salesman_id = b.FIM_user_id left join (select FIM_user_id,FIM_user_name as created_user_name from fim_users_table ${qw5.customSqlSegment}) as c on a.created_user = c.FIM_user_id left join (select customer_id,customer_name from fim_customer_table ${qw6.customSqlSegment}) as f on a.customer_id = f.customer_id ${ew.customSqlSegment} order by inquiry_code desc </script>])' and '@org.apache.ibatis.annotations.Select(databaseId=, value=[<script>SELECT DISTINCT inquiry_id, inquiry_code, inquiry_init_type, state, created_user_name, item_type, allow_inquiry, inquiry_type, item_code, item_name, customer_name, salesman_name, sale_num, expected_time, arranged_time, delay, customer_type, order_delivery_progress, delivery_code, receive_time, delivery_state, customize, remark, create_time, update_time FROM (SELECT fim_inquiry_table.inquiry_id, (CASE WHEN state = -1 THEN '无效' WHEN state = 0 THEN '保存' ELSE CONCAT('询单', state, '次') END) AS state, a.inquiry_code AS inquiry_code, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN order_delivery_progress IS NULL THEN '未发货' WHEN order_delivery_progress = 80 THEN '已签收' WHEN order_delivery_progress = 40 THEN '海外订单' ELSE '已发货客户未签收' END) AS order_delivery_progress, delivery_code, receive_time, delivery_state, delay AS delay, (CASE WHEN item_type = 1 THEN '已有标品' WHEN item_type = 2 THEN '已有定制' WHEN item_type = 3 THEN '新增软件定制' WHEN item_type = 4 THEN '新增原材料定制' WHEN item_type = 5 THEN '新增原材料+软件定制' ELSE '错误物料类型' END) AS item_type, item_code AS item_code, item_name AS item_name, (CASE WHEN inquiry_type = 1 THEN 'PO(客户付款)' WHEN inquiry_type = 2 THEN 'PR(客户提出付款意向)' WHEN inquiry_type = 3 THEN 'YG(供应链预估)' WHEN inquiry_type = 4 THEN 'YC(销售预测)' WHEN inquiry_type = 5 THEN 'XD(意向询单)' ELSE 'ER(错误)' END) AS inquiry_type, (CASE WHEN item_type = 1 OR item_type = 2 THEN '否' WHEN item_type = 3 OR item_type = 4 OR item_type = 5 THEN '是' ELSE '错误' END) AS customize, (CASE WHEN customer_type IS NULL THEN '日常' ELSE customer_type END) AS customer_type, (CASE WHEN inquiry_init_type = 5 THEN '销售询单' WHEN inquiry_init_type = 4 THEN '销售预测' WHEN inquiry_init_type = 3 THEN '供应链预估' ELSE '错误的初始类型' END) AS inquiry_init_type FROM (SELECT fim_inquiry_table.inquiry_id, inquiry_code AS inquiry_code, state AS state, inquiry_init_type AS inquiry_init_type, inquiry_type AS inquiry_type, sale_num AS sale_num, expected_time AS expected_time, arranged_time AS arranged_time, allow_inquiry AS allow_inquiry, created_user AS created_user, salesman_id AS salesman_id, a.item_id AS item_id, a.customer_id AS customer_id, remark AS remark, (CASE WHEN arranged_time > expected_time THEN '是' ELSE '否' END) AS delay FROM fim_inquiry_table <if test='qw1.customSqlSegment != null'>${qw1.customSqlSegment}</if> ) AS a LEFT JOIN (SELECT inquiry_code, MIN(created_time) AS create_time, MAX(created_time) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code) AS b ON a.inquiry_code = b.inquiry_code LEFT JOIN (SELECT customer_id, item_id, customer_type FROM fim_customer_type_table) AS d ON a.customer_id = d.customer_id AND d.item_id = a.item_id LEFT JOIN (SELECT item_id, item_code, item_name, item_type FROM fim_item_table <if test='qw2.customSqlSegment != null'>${qw2.customSqlSegment}</if> ) AS e ON e.item_id = a.item_id LEFT JOIN (SELECT inquiry_code, delivery_state AS order_delivery_progress, delivery_code AS delivery_code, receive_time AS receive_time, delivery_latest_state AS delivery_state FROM delivery_table <if test='qw3.customSqlSegment != null'>${qw3.customSqlSegment}</if> ) AS j ON j.inquiry_code = a.inquiry_code LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS salesman_name FROM fim_users_table <if test='qw4.customSqlSegment != null'>${qw4.customSqlSegment}</if> ) AS b ON a.salesman_id = b.FIM_user_id LEFT JOIN (SELECT FIM_user_id, FIM_user_name AS created_user_name FROM fim_users_table <if test='qw5.customSqlSegment != null'>${qw5.customSqlSegment}</if> ) AS c ON a.created_user = c.FIM_user_id LEFT JOIN (SELECT customer_id, customer_name FROM fim_customer_table <if test='qw6.customSqlSegment != null'>${qw6.customSqlSegment}</if> ) AS f ON a.customer_id = f.customer_id <if test='ew.customSqlSegment != null'>${ew.customSqlSegment}</if> ORDER BY inquiry_code DESC</script>])' on 'com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter'.
2023-11-02 18:26:51.823 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:26:51.843 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - interface java.util.Map ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:26:53.317 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.Past.PastPredictionCompany ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:27:05.329 [http-nio-8080-exec-3] WARN  [,] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'z.inquiry_codeleft' in 'on clause'
### The error may exist in com/benewake/saleordersystem/mapper/Vo/SalesOrderVoMapper.java (best guess)
### The error may involve com.benewake.saleordersystem.mapper.Vo.SalesOrderVoMapper.selectListByFilter-Inline
### The error occurred while setting parameters
### SQL: select distinct (inquiry_id),inquiry_code,inquiry_init_type,state,created_user_name,item_type,allow_inquiry,inquiry_type,item_code,item_name,customer_name,salesman_name,sale_num,expected_time,arranged_time,delay,customer_type,order_delivery_progress,delivery_code,receive_time,delivery_state,customize,remark from (select inquiry_id as inquiry_id,(case when state=-1 then '无效' when state=0 then '保存' else concat('询单',state,'次') end) as state,a.inquiry_code as inquiry_code,sale_num as sale_num,expected_time as expected_time,arranged_time as arranged_time,allow_inquiry as allow_inquiry,created_user as created_user,salesman_id as salesman_id,a.item_id as item_id,a.customer_id as customer_id,remark as remark,(case when order_delivery_progress is null then '未发货' when order_delivery_progress = 80 then '已签收' when order_delivery_progress = 40 then '海外订单'else '已发货客户未签收' end) as order_delivery_progress,delivery_code,receive_time,delivery_state,delay as delay,(case when item_type = 1 then '已有标品' when item_type = 2 then '已有定制' when item_type = 3 then '新增软件定制' when item_type = 4 then '新增原材料定制'  when item_type = 5 then '新增原材料+软件定制' else '错误物料类型' end) as item_type,item_code as item_code,item_name as item_name,(case when inquiry_type = 1 then 'PO(客户付款)' when inquiry_type = 2 then 'PR(客户提出付款意向)' when inquiry_type = 3 then 'YG(供应链预估)' when inquiry_type = 4 then 'YC(销售预测)' when inquiry_type = 5 then 'XD(意向询单)' else 'ER(错误)' end) as inquiry_type,(case when item_type = 1 or item_type = 2 then '否' when item_type = 3 or item_type = 4 or item_type = 5 then '是' else '错误' end) as customize,(case when customer_type is null then '日常' else customer_type end) as customer_type,(case when inquiry_init_type = 5 then '销售询单' when inquiry_init_type = 4 then '销售预测' when inquiry_init_type = 3 then '供应链预估' else '错误的初始类型' end) as inquiry_init_type from (select fim_inquiry_table.inquiry_id,inquiry_code as inquiry_code,state as state,inquiry_init_type as inquiry_init_type,inquiry_type as inquiry_type,sale_num as sale_num,expected_time as expected_time,arranged_time as arranged_time,created_user as created_user,salesman_id as salesman_id,item_id as item_id,customer_id as customer_id,remark as remark,allow_inquiry as allow_inquiry,(case when arranged_time > expected_time then '是' else '否' end )as delay from fim_inquiry_table left join (select SUBSTRING_INDEX(GROUP_CONCAT(inquiry_id ORDER BY created_time desc),',',1) as inquiry_id,SUBSTRING_INDEX(GROUP_CONCAT(inquiry_type ORDER BY created_time asc),',',1) as inquiry_init_type from fim_inquiry_table group by inquiry_code) as bb on bb.inquiry_id = fim_inquiry_table.inquiry_id WHERE (bb.inquiry_id IS NOT NULL AND state >= ?)) as a left join (select customer_id,item_id,customer_type from fim_customer_type_table) as d on a.customer_id = d.customer_id and d.item_id = a.item_id left join (SELECT inquiry_code, MIN( created_time ) AS create_time, MAX( created_time ) AS update_time FROM fim_inquiry_table GROUP BY inquiry_code )as z on a.inquiry_code=z.inquiry_codeleft join (select item_id,item_code,item_name,item_type from fim_item_table WHERE (item_code IS NOT NULL)) as e on e.item_id = a.item_id left join(select inquiry_code,delivery_state as order_delivery_progress,delivery_code as delivery_code,receive_time as receive_time,delivery_latest_state as delivery_state from delivery_table) as j on j.inquiry_code = a.inquiry_code WHERE (item_code IS NOT NULL)) as a left join (select FIM_user_id,FIM_user_name as salesman_name from fim_users_table WHERE (FIM_user_name IS NOT NULL)) as b on a.salesman_id = b.FIM_user_id left join (select FIM_user_id,FIM_user_name as created_user_name from fim_users_table WHERE (FIM_user_name IS NOT NULL)) as c on a.created_user = c.FIM_user_id left join (select customer_id,customer_name from fim_customer_table WHERE (customer_name IS NOT NULL)) as f on a.customer_id = f.customer_id WHERE (customer_name IS NOT NULL AND created_user_name IS NOT NULL AND salesman_name IS NOT NULL AND (created_user_name = ? OR salesman_name = ?)) order by inquiry_code desc
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'z.inquiry_codeleft' in 'on clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'z.inquiry_codeleft' in 'on clause']
2023-11-02 18:28:24.219 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.InquiryCode ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:28:24.246 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - interface java.util.Map ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2023-11-02 18:28:26.052 [restartedMain] WARN  [,] c.b.mybatisplus.core.injector.DefaultSqlInjector - class com.benewake.saleordersystem.entity.Past.PastPredictionCompany ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
